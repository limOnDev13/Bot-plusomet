# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  linters:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync
    - name: Run Linters
      run: |
        uv run black --check --diff .
        uv run isort --check-only --diff .
        uv run flake8 .
        uv run mypy --check-untyped-defs .

  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.12 ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync
      - name: Run Tests
        env:
          DEBUG: 1
          MODERATION_MIN_DELAY: 0.5
          MODERATION_MAX_DELAY: 1
          YANDEXGPT_OAUTH: ${{ secrets.YANDEXGPT_OAUTH }}
          YANDEXGPT_CATALOG_ID: ${{ secrets.YANDEXGPT_CATALOG_ID }}
          YANDEXGPT_TEMPERATURE: ${{ secrets.YANDEXGPT_TEMPERATURE }}
          YANDEXGPT_MAX_TOKENS: ${{ secrets.YANDEXGPT_MAX_TOKENS }}
        run: |
          pytest .
